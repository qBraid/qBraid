[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "qbraid"
dynamic = ["version"]
description = "Platform-agnostic quantum runtime framework."
readme = "README.md"
authors = [{name = "qBraid Development Team"}, {email = "contact@qbraid.com"}]
license = {text = "GNU General Public License v3.0"}
keywords = ["qbraid", "quantum", "openqasm", "runtime"]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics"
]
dependencies = [
    "rustworkx>=0.14.2",
    "numpy>=1.17,<1.27",
    "openqasm3[parser]>=0.4.0,<0.6.0",
    "ply>=3.6",
    "qbraid-core>=0.1.13"
]
requires-python = ">=3.9,<3.13"

[project.urls]
Homepage = "https://www.qbraid.com/"
Documentation = "https://docs.qbraid.com/en/stable/"
"Source Code" = "https://github.com/qBraid/qBraid"
"Bug Tracker" = "https://github.com/qBraid/qBraid/issues"
Discord = "https://discord.gg/TPBU2sa8Et"
"Launch on Lab" = "https://account.qbraid.com/?gitHubUrl=https://github.com/qBraid/qBraid.git"

[project.optional-dependencies]
runtime = ["qbraid-qir>=0.2"]
braket = ["amazon-braket-sdk>=1.74,<1.81", "pytket-braket>=0.30,<0.37"]
qiskit = ["qiskit>=0.44,<1.2", "qiskit-ibm-runtime>=0.18,<0.24"]
oqc = ["oqc-qcaas-client>=3.5,<4.0"]
visualization = ["ipython", "matplotlib", "pylatexenc"]
test = ["pytest", "pytest-cov", "pytest-xdist"]
lint = ["black", "isort", "pylint", "qbraid-cli>=0.8.2"]
docs = ["sphinx>=7.2,<7.4", "sphinx-autodoc-typehints>=1.24,<2.2", "sphinx-rtd-theme>=1.3,<2.1", "docutils<0.22", "sphinx-copybutton"]

[project.entry-points."qbraid.programs"]
braket = "qbraid.programs.libs.braket:BraketCircuit"
cirq = "qbraid.programs.libs.cirq:CirqCircuit"
pennylane = "qbraid.programs.libs.pennylane:PennylaneTape"
pyquil = "qbraid.programs.libs.pyquil:PyQuilProgram"
qiskit = "qbraid.programs.libs.qiskit:QiskitCircuit"
pytket = "qbraid.programs.libs.pytket:PytketCircuit"
qasm2 = "qbraid.programs.libs.qasm2:OpenQasm2Program"
qasm3 = "qbraid.programs.libs.qasm3:OpenQasm3Program"

[tool.setuptools.dynamic]
version = {attr = "qbraid._version.__version__"}

[tool.pytest.ini_options]
minversion = "6.0"
log_cli = false
log_cli_level = "CRITICAL"
log_cli_format = "%(message)s"
log_file = "pytest.log"
log_file_level = "WARNING"
log_file_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_file_date_format = "%Y-%m-%d %H:%M:%S"
testpaths = [
  "tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::urllib3.exceptions.InsecureRequestWarning",
    "ignore::RuntimeWarning:numpy.linalg.linalg",
    "ignore::pytest.PytestCollectionWarning",
]

[tool.coverage.run]
parallel = true
source = ["qbraid"]
omit = [
  "**/qbraid/transforms/qasm3/format.py",
  "**/qbraid/runtime/braket/tracker.py",
  "**/qbraid/visualization/draw_circuit.py",
  "**/qbraid/_compat.py",
  "**/qbraid/transpiler/conversions/qasm2/qasm2_extras.py"
]

[tool.coverage.paths]
source = ["qbraid", ".tox/*/lib/python*/site-packages/qbraid"]

[tool.coverage.report]
show_missing = true
skip_covered = true
ignore_errors = true
exclude_lines = [
  "raise NotImplementedError",
  "return NotImplemented",
  "def __repr__",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "logger.debug",
  "__all__",
  "def __getattr__",
  "def __dir__"
]

[tool.coverage.html]
directory = "build/coverage"

[tool.coverage.xml]
output = "build/coverage/coverage.xml"

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.__pycache__
  | \.tox
  | \.venv
  | dist
)/
'''

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 100
disable = "C0103, E0401, R0801, R0902, R0903, R0911, R0912, R0914, W0212, W0511"
extension-pkg-whitelist = ["rustworkx"]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100
