[tox]
minversion = 4.2.0
env_list =
    unit-tests
    docs
    linters
    format-check
skip_missing_interpreter = true

[testenv]
commands_pre = python -m pip install --editable .
basepython = python3
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
pass_env =
    AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY
    QBRAID_RUN_REMOTE_TESTS

[testenv:unit-tests]
description = Run pytests and generate coverage report.
commands =
    python3 tools/set_provider_configs.py
    coverage run -m pytest -x tests/programs \
                              tests/transpiler \
                              tests/transforms \
                              tests/runtime \
                              tests/visualization \
                              tests/top_level \
                           -W ignore::DeprecationWarning \
                           -W ignore::PendingDeprecationWarning \
                           -W ignore::urllib3.exceptions.InsecureRequestWarning \
                           -W ignore::RuntimeWarning
    coverage combine
    coverage report --omit=qbraid/visualization/draw_circuit.py,qbraid/visualization/plot_conversions.py,qbraid/_compat.py,qbraid/transpiler/conversions/qasm2/qasm2_extras.py,qbraid/runtime/ionq/*
    coverage html
    coverage xml

[testenv:docs]
description = Use sphinx to build the HTML docs.
extras =
    docs
commands =
    sphinx-build -W -b html docs/ docs/build/html {posargs}

[testenv:isort]
envdir = .tox/linters
skip_install = true
deps = isort
commands = 
    isort . {posargs} qbraid tools tests

[testenv:pylint]
envdir = .tox/linters
skip_install = true
deps = pylint
commands = 
    pylint {posargs} qbraid tools tests --disable=C0103,E0401,R0801,R0902,R0903,R0911,R0912,R0914,W0212,W0511
                    
[testenv:black]
envdir = .tox/linters
skip_install = true
deps = black
commands = 
    black qbraid tools tests --exclude /(tests/transpiler/cirq/test_qasm_parser.py)/ {posargs}

[testenv:headers]
envdir = .tox/linters
skip_install = true
deps = qbraid-cli
commands = 
    qbraid admin headers tests tools qbraid --type=gpl {posargs}

[testenv:linters]
allowlist_externals = qbraid
envdir = .tox/linters
skip_install = true
deps =
    {[testenv:isort]deps}
    {[testenv:black]deps}
commands =
    {[testenv:isort]commands}
    {[testenv:black]commands}
    {[testenv:headers]commands} {posargs:--fix}

[testenv:format-check]
allowlist_externals = qbraid
envdir = .tox/linters
skip_install = true
deps =
    {[testenv:pylint]deps}
    {[testenv:isort]deps}
    {[testenv:black]deps}
    {[testenv:headers]deps}
commands =
    {[testenv:pylint]commands}
    {[testenv:isort]commands} {posargs:--check-only}
    {[testenv:black]commands} {posargs:--check}
    {[testenv:headers]commands}